
// See https://engineering.fb.com/2019/04/25/developer-tools/f14/ for ideas on high performance hash tables
published class Hash_Dictionary[Key shareable ind, Value ind nonwritable out] <: Dictionary[Key, Value]
{
    // TODO type parameter access should be `Self.Key`?
    let key_comparer: Hash_Equivalence[Key];

    // published init(mut self) { }

    published init(mut self, .key_comparer) { }

    published init /*with_capacity*/(mut self, capacity: size, .key_comparer) { }

    published get key_comparer(self) -> Hash_Equivalence[Key]
        => .key_comparer;
}
