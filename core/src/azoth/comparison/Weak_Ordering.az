/// A weak order over `T`
published const trait Weak_Ordering[T in] <: Equivalence[T], Key_Comparer[T]
{
    // TODO return ordering
    published fn compare(self, lent first: T, lent second: T) -> int8;

    // public operator _==_ (const self, other: const Self) -> bool?
    // {
    //     return .compare(other) == .Equal;
    // }

    // public operator _<_ (const self, other: const Self) -> bool?
    // {
    //     return .compare(other) == .Less;
    // }

    // public operator _<=_ (const self, other: Self) -> bool?
    // {
    //     return match .compare(other)
    //     {
    //         .Less | .Equal => true,
    //         _ => false
    //     };
    // }

    // public operator _>_ (const self, other: Self) -> bool>
    // {
    //     return .compare(other) == .Greater;
    // }

    // public operator _>=_ (const self, other: Self) -> bool
    // {
    //     return match .compare(other)
    //     {
    //         .Greater | .Equal => true,
    //         _ => false
    //     };
    // }
}
