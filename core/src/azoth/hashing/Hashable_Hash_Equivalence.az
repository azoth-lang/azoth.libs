/// A `Hash_Equivalence[T]` relation for `Hashable` types
/// Note to call `.equals`, `T` must be `const`
public const class Hashable_Hash_Equivalence[const T in] <: Hash_Equivalence[T]
    // where T: Hashable
{
    let factory: Hasher_Factory;

    published init(self, .factory) { }

    published fn equal(const self, lent first: T, lent second: T) -> bool
    {
        // return first.equals(second);
        NOT_IMPLEMENTED();
    }

    published fn hash(const self, value: T) -> nuint
    {
        NOT_IMPLEMENTED();
        // let hasher: mut = .factory.create();
        // value.hash(hasher);
        // return hasher.finalize();
    }
}
